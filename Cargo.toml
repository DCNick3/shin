[workspace]
members = [
    "shin-derive",
    "shin-core",
    "shin-render",
    "shin-render-shader-types",
    "shin-render-shaders",
    "shin-video",
    "shin-tasks",
    "shin-audio",
    "shin-asm",
    "shin-window",
    "shin-input",
    "shin-primitives",
    "sdu",
    "shin",
    "junk",
    "junk/mesh-vis",
]
resolver = "2"

[workspace.dependencies]
# encase 0.10 requires glam 0.29, can't update any further
glam = "0.29.0"
dpi = "0.1.1"

# beta version for GATs
enum-map = "3.0.0-beta.1"
smallvec = "2.0.0-alpha.8"
heapless = "0.8.0"
indexmap = "2.7.1"

wgpu = "24.0.1"
winit = "0.30.5"

# egui used for debug overlays
egui = "0.31.0"
egui-wgpu = "0.31.0"

kira = { version = "0.9.3", default-features = false }

image = { version = "0.25.1", default-features = false }

tracing = "0.1.41"
anyhow = "1.0.69"

bevy_utils = "0.15.2"
itertools = "0.14.0"
binrw = "0.14.0"

bytes = "1.5.0"

# TODO: replace uses of `strum` with `enum-iterator` crate
strum = "0.27.1"
enum-iterator = "2.1.0"
bytemuck = "1.16.1"
# Be careful when updating! We rely on private & internal APIs
encase = "0.10.0"

# TODO: migrate more things to parking_lot
# running with deadlock detection for now because I've been getting rare deadlocks in wgpu :/
parking_lot = { version = "0.12.3", features = ["deadlock_detection"] }

replace_with = "0.1.7"

rayon-core = "1.12.1"
rayon = "1.10.0"

[patch.crates-io]
# git version for deadlock fix https://github.com/gfx-rs/wgpu/pull/7221
wgpu = { git = "https://github.com/gfx-rs/wgpu.git", rev = "9aafe4c236dde009956888da824d2a4b048d2bd6" }

[profile.release]
debug = true
#lto = 'thin'

# optimize deps
[profile.dev.package."*"]
#opt-level = 2

[profile.release.package.wgpu-core]
# enable debug assertions to keep validations & debug labels
# they are still disabled in `dist` profile used to build the release
debug-assertions = true

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
debug = false
lto = "thin"

[workspace.lints.clippy]
bool_comparison = "allow"
bool_assert_comparison = "allow"
new_without_default = "allow"
let_and_return = "allow"
too_many_arguments = "allow"
type_complexity = "allow"
useless_format = "allow"

[workspace.metadata.release]
shared-version = true
publish = false # can't publish yet because of enum-map git dep
tag-prefix = ""

# Config for 'dist'
[workspace.metadata.dist]
# The preferred dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.25.1"
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-pc-windows-msvc"]
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell"]
# Which actions to run on pull requests
pr-run-mode = "plan"
# Whether to install an updater program
install-updater = false
# Path that installers should place binaries in
install-path = "CARGO_HOME"

# install additional packages when building the linux release
[workspace.metadata.dist.dependencies.apt]
libasound2-dev = '*'
libudev-dev = '*'
