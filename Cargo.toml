[workspace]
members = [
    "shin-derive",
    "shin-core",
    "shin-render",
    "shin-video",
    "shin-tasks",
    "shin-audio",
    "shin-asm",
    "sdu",
    "shin",
    "junk",
    #    "junk/mesh-vis",
]
resolver = "2"

[workspace.dependencies]
glam = "0.28.0"
# beta version for GATs
enum-map = "3.0.0-beta.1"
#enum-map = { path = "/home/dcnick3/git_cloned/enum-map/enum-map" }
smallvec = { git = "https://github.com/servo/rust-smallvec.git", rev = "98b49e4d974c20f6d44a0804071074f267be0d88" }
#wgpu = "0.20.1"
# using git version for a fix for https://github.com/gfx-rs/wgpu/issues/1453
wgpu = { git = "https://github.com/gfx-rs/wgpu.git", rev = "6f16ea460ab437173e14d2f5f3584ca7e1c9841d" }
kira = { version = "0.9.3", default-features = false }
winit = "0.29.15"

# egui used for debug overlays
#egui = "0.28.1"
#egui-wgpu = "0.28.1"
# using git version for git wgpu compat
egui = { git = "https://github.com/DCNick3/egui.git", rev = "cd4e907b3a0353b26ef8e9851fe069410ed9c5b4" }
egui-wgpu = { git = "https://github.com/DCNick3/egui.git", rev = "cd4e907b3a0353b26ef8e9851fe069410ed9c5b4" }

image = { version = "0.25.1", default-features = false }
anyhow = "1.0.69"
bevy_utils = "0.14.0"
itertools = "0.13.0"
binrw = "0.14.0"

bytes = "1.5.0"

strum = "0.26.3"
bytemuck = "1.16.1"

[profile.release]
debug = true
#lto = 'thin'

# optimize deps
[profile.dev.package."*"]
#opt-level = 2

[profile.release.package.wgpu-core]
# enable debug assertions to keep validations & debug labels
# they are still disabled in `dist` profile used to build the release
debug-assertions = true

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
debug = false
lto = "thin"

[workspace.metadata.release]
shared-version = true
publish = false # can't publish yet because of enum-map git dep
tag-prefix = ""

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.14.0"
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-pc-windows-msvc"]
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell"]
# Publish jobs to run in CI
pr-run-mode = "plan"
# Whether to install an updater program
install-updater = false

# install additional packages when building the linux release
[workspace.metadata.dist.dependencies.apt]
libasound2-dev = '*'
