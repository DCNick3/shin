[package]
name = "shin"
version = "0.6.1"
edition = "2021"
description = "A visual novel engine used by some entergram games"
repository = "https://github.com/DCNick3/shin"
license = "MPL-2.0"
authors = ["DCNick3"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[dependencies]
shin-core = { path = "../shin-core" }
shin-render = { path = "../shin-render" }
shin-derive = { path = "../shin-derive" }
shin-tasks = { path = "../shin-tasks" }
shin-audio = { path = "../shin-audio" }
shin-input = { path = "../shin-input" }
shin-video = { path = "../shin-video" }
shin-window = { path = "../shin-window" }

anyhow = { workspace = true }
async-trait = "0.1.81"
futures = "0.3.30"

# various non-allocating/SSO containers
# TODO: consolidate
smallvec = { workspace = true }
heapless = { workspace = true }
petitset = "0.2.1"
arrayvec = "0.7.4"

indexmap = "2.7.0"

tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }

bytes = { workspace = true }

clap = { version = "4.5.9", features = ["derive"] }
clap-num = "1.1.1"
dirs-next = "2.0.0"

winit = { workspace = true }
wgpu = { workspace = true }
etagere = "0.2.13"

glam = { workspace = true, features = [
    # "scalar-math" disables the 16-byte alignment requirement for some types
    # this is required for bytemuck to work
    "bytemuck",
    # "scalar-math"
] }
bytemuck = { workspace = true, features = ["derive"] }
image = { workspace = true, default-features = false }

# Theese part of bevy does not depend on ECS or the reflection, so it's not a big problem to use them
bevy_utils = { workspace = true }

# just one more macro crate and rust will be perfect
num-derive = "0.4.2"
num-traits = "0.2.19"
enum-map = { workspace = true }
derive_more = "0.99.18"
enum_dispatch = "0.3.13"
strum = { workspace = true }
anymap = "1.0.0-beta.2"
derivative = "2.2.0"
serde = "1.0.204"
from_variants = "1.0.2"
cfg-if = "1.0.0"

itertools = { workspace = true }
once_cell = "1.19.0"

egui = { workspace = true }
egui-wgpu = { workspace = true }
# used for implementation of dynamic atlas overlay
usvg = "0.36.0"

# kira for audio output
kira = { workspace = true }
bitflags = "2.6.0"

drop_bomb = "0.1.5"

parking_lot = { workspace = true }

[features]
default = []
gstreamer-video = ["shin-video/gstreamer"]

[lints]
workspace = true

[package.metadata.release]
# this crate is not ready for publishing yet
# (it has git dependencies)
publish = false
